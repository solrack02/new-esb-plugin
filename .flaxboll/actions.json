{"1723733818570":{"actionType":"saveAll","createdAt":"1723733818570","actionID":"1723733818570","userID":"#TEMP","path":"system.capsules.4f7511ad-fba9-4253-a662-c39c0fa21e93.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"// ---------- import React Packs\nimport React from 'react';\nimport * as RN from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaView, Platform, View } from 'react-native';\n\n// ---------- import Variables Pack\n\n// ---------- import Local Tools\nexport { getStlValues } from './src/tools/base/project/getStlValues';\nexport { getVarValue } from './src/tools/base/project/getVarValue';\nexport { setArgsVars } from './src/tools/base/project/setArgsVars';\nexport { mapElements } from './src/tools/base/project/mapElements';\nexport { getCtData } from './src/tools/base/project/getCtData';\nexport { pathSel } from './src/tools/base/project/pathSel';\nexport { setData } from './src/tools/base/project/setData';\nexport { argSel } from './src/tools/base/project/argSel';\nexport { goTo } from './src/tools/base/project/goTo';\n\n// ---------- set Caps Inputs\nconst currRoute = '!#!initial screen!#!';\n\nlet args: any = [];\n\ntype Tprops = {\n  configData: {\n    screens: any[];\n    initCt: Record<string, any>;\n    arrInitFuncs: (() => void)[];\n  };\n};\n\n// ---------- set Main Component\nexport const Project = ({ configData }: Tprops) => {\n  // ---------- set Data\n  const { screens, arrInitFuncs } = configData;\n\n  // ---------- call Functions (If Exists)\n  React.useEffect(() => {\n    const callFn = async () => {\n      for (const currFunc of arrInitFuncs) await currFunc();\n    };\n\n    callFn().catch(err => console.log('Project Start Functions', { err }));\n  }, []);\n\n  return (\n    <RN.View style={{ flexDirection: 'column', width: '100%' }}>\n      <SafeAreaView\n        style={{ width: '100%', height: '100%', overflow: 'hidden' }}\n      >\n        {Platform.OS !== 'web' && (\n          <View style={{ height: 30, backgroundColor: '#450b2c' }} />\n        )}\n        {mapElements(screens)}\n        <StatusBar style=\"light\" />\n      </SafeAreaView>\n    </RN.View>\n  );\n};\n","newValue":"// ---------- import React Packs\nimport React from 'react';\nimport * as RN from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaView, Platform, View } from 'react-native';\n\n// ---------- import Variables Pack\n\n// ---------- import Local Tools\nexport { getStlValues } from './src/tools/base/project/getStlValues';\nexport { getVarValue } from './src/tools/base/project/getVarValue';\nexport { setArgsVars } from './src/tools/base/project/setArgsVars';\nexport { mapElements } from './src/tools/base/project/mapElements';\nexport { getCtData } from './src/tools/base/project/getCtData';\nexport { pathSel } from './src/tools/base/project/pathSel';\nexport { setData } from './src/tools/base/project/setData';\nexport { argSel } from './src/tools/base/project/argSel';\nexport { goTo } from './src/tools/base/project/goTo';\n\n// ---------- set Caps Inputs\nconst currRoute = '!#!initial screen!#!';\n\nlet args: any = [];\n\ntype Tprops = {\n  configData: {\n    screens: any[];\n    initCt: Record<string, any>;\n    arrInitFuncs: (() => void)[];\n  };\n};\n\n// ---------- set Main Component\nexport const Project = ({ configData }: Tprops) => {\n  // ---------- set Data\n  const { screens, arrInitFuncs } = configData;\n\n  // ---------- call Functions (If Exists)\n  React.useEffect(() => {\n    const callFn = async () => {\n      for (const currFunc of arrInitFuncs) await currFunc();\n    };\n\n    callFn().catch(err => console.log('Project Start Functions', { err }));\n  }, []);\n\n  return (\n    <RN.View style={{ flexDirection: 'column', width: '100%' }}>\n      <SafeAreaView\n        style={{ width: '100%', height: '100%', overflow: 'hidden' }}\n      >\n        {Platform.OS !== 'web' && (\n          <View style={{ height: 30, backgroundColor: '#450b2c' }} />\n        )}\n        {mapElements(screens)}\n        <StatusBar style=\"light\" />\n      </SafeAreaView>\n    </RN.View>\n  );\n};"}}